<?php
// lib/email_helpers.php
// Simple helpers for generating HTML emails and sending via PHP's mail().

function generate_email_body(string $title, string $message, string $link): string {
    $msg = nl2br(htmlspecialchars($message));
    return <<<HTML
    <html>
    <head>
      <meta charset="UTF-8">
      <style type="text/css">
        body { font-family: Arial, sans-serif; color: #333; margin:0; padding:0; }
        .email-container { width:100%; max-width:600px; margin:20px auto; padding:20px; border:1px solid #ddd; background-color:#f9f9f9; }
        .header { background-color:#24549C; padding:15px; text-align:center; color:#fff; font-size:22px; }
        .content { margin:20px 0; font-size:16px; line-height:1.4; }
        .btn { display:inline-block; background-color:#24549C; color:#fff; padding:10px 20px; text-decoration:none; border-radius:5px; margin-top:15px; }
        .footer { margin-top:20px; font-size:12px; text-align:center; color:#888; }
      </style>
    </head>
    <body>
      <div class="email-container">
        <div class="header">{$title}</div>
        <div class="content">
          <p>{$msg}</p>
          <p style="text-align:center;"><a class="btn" href="{$link}">View Schedule</a></p>
        </div>
        <div class="footer"><p>This email was automatically generated by Armstrong Scheduler.</p></div>
      </div>
    </body>
    </html>
HTML;
}

/**
 * Send an HTML email using basic SMTP authentication. Connection details are
 * expected to be defined in `/home/freeman/job_scheduler.php`, which is
 * included across the application. Variables used:
 *   - $smtpHost   (string) hostname of SMTP server
 *   - $smtpPort   (int)    port number (default 25)
 *   - $smtpUser   (string) SMTP username
 *   - $smtpPass   (string) SMTP password
 *   - $smtpSecure (string) optional "ssl" or "tls" to prefix the host
 *   - $email_username (string) email address used in the From header
 */
function send_email(array $toEmails, string $subject, string $body, array $ccEmails = [], ?callable $logger = null): bool {
    global $smtpHost, $smtpPort, $smtpUser, $smtpPass, $smtpSecure, $email_username;

    $host     = $smtpHost   ?? 'localhost';
    $port     = $smtpPort   ?? 25;
    $username = $smtpUser   ?? '';
    $password = $smtpPass   ?? '';
    $from     = $email_username ?? $smtpUser ?? '';
    $scheme   = $smtpSecure ? $smtpSecure . '://' : '';

    $socket = @fsockopen($scheme . $host, $port, $errno, $errstr, 30);
    if (!$socket) {
        if ($logger) {
            $logger('send_email error=connection failed: ' . $errstr);
        }
        return false;
    }

    $read = function () use ($socket) {
        $data = '';
        while ($str = fgets($socket, 515)) {
            $data .= $str;
            if (substr($str, 3, 1) === ' ') {
                break;
            }
        }
        return $data;
    };

    $write = function (string $cmd) use ($socket) {
        fwrite($socket, $cmd . "\r\n");
    };

    // Initial greeting
    $read();
    $write('EHLO ' . $host);
    $read();

    // Authenticate if credentials provided
    if ($username !== '' && $password !== '') {
        $write('AUTH LOGIN');
        $read();
        $write(base64_encode($username));
        $read();
        $write(base64_encode($password));
        $read();
    }

    $write('MAIL FROM:<'.$from.'>');
    $read();
    foreach ($toEmails as $to) {
        $write('RCPT TO:<'.$to.'>');
        $read();
    }
    foreach ($ccEmails as $cc) {
        $write('RCPT TO:<'.$cc.'>');
        $read();
    }
    $write('DATA');
    $read();

    $headers  = 'From: ' . $from . "\r\n";
    $headers .= 'To: ' . implode(',', $toEmails) . "\r\n";
    if ($ccEmails) {
        $headers .= 'Cc: ' . implode(',', $ccEmails) . "\r\n";
    }
    $headers .= "MIME-Version: 1.0\r\n";
    $headers .= "Content-type: text/html; charset=UTF-8\r\n";
    $headers .= 'Subject: ' . $subject . "\r\n\r\n";

    $write($headers . $body . "\r\n.");
    $read();
    $write('QUIT');
    fclose($socket);

    if ($logger) {
        $logger('send_email to=' . implode(',', $toEmails) . '; subject=' . $subject . '; cc=' . implode(',', $ccEmails) . '; result=success');
    }
    return true;
}