<?php
// lib/email_helpers.php
// Helpers for generating HTML emails and sending via PHPMailer over SMTP.

$autoload = __DIR__ . '/../vendor/autoload.php';
if (!file_exists($autoload)) {
    $autoload = __DIR__ . '/../../vendor/autoload.php';
}
if (file_exists($autoload)) {
    require_once $autoload;
}

use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

function generate_email_body(string $title, string $message, string $link): string {
    $msg = nl2br(htmlspecialchars($message));
    return <<<HTML
    <html>
    <head>
      <meta charset="UTF-8">
      <style type="text/css">
        body { font-family: Arial, sans-serif; color: #333; margin:0; padding:0; }
        .email-container { width:100%; max-width:600px; margin:20px auto; padding:20px; border:1px solid #ddd; background-color:#f9f9f9; }
        .header { background-color:#24549C; padding:15px; text-align:center; color:#fff; font-size:22px; }
        .content { margin:20px 0; font-size:16px; line-height:1.4; }
        .btn { display:inline-block; background-color:#24549C; color:#fff; padding:10px 20px; text-decoration:none; border-radius:5px; margin-top:15px; }
        .footer { margin-top:20px; font-size:12px; text-align:center; color:#888; }
      </style>
    </head>
    <body>
      <div class="email-container">
        <div class="header">{$title}</div>
        <div class="content">
          <p>{$msg}</p>
          <p style="text-align:center;"><a class="btn" href="{$link}">View Schedule</a></p>
        </div>
        <div class="footer"><p>This email was automatically generated by Armstrong Scheduler.</p></div>
      </div>
    </body>
    </html>
HTML;
}

/**
 * Send an HTML email using PHPMailer. Connection details are expected to be
 * defined in `/home/freeman/job_scheduler.php`, which is included across the
 * application. Variables used:
 *   - $smtpHost   (string) hostname of SMTP server
 *   - $smtpPort   (int)    port number
 *   - $smtpUser   (string) SMTP username
 *   - $smtpPass   (string) SMTP password
 *   - $smtpSecure (string) "ssl" or "tls" (defaults to tls)
 *   - $email_username (string) default From address
 */
function send_email(array $toEmails, string $subject, string $body, array $ccEmails = [], ?callable $logger = null): bool {
    global $smtpHost, $smtpPort, $smtpUser, $smtpPass, $smtpSecure, $email_username, $email_password;

    $mail = new PHPMailer(true);
    try {
        $mail->isSMTP();
        $mail->Host       = $smtpHost   ?? 'smtp.ionos.com';
        $mail->Port       = $smtpPort   ?? 587;
        $mail->SMTPAuth   = true;
        $mail->Username   = $smtpUser   ?? ($email_username ?? '');
        $mail->Password   = $smtpPass   ?? ($email_password ?? '');
        $secure           = strtolower($smtpSecure ?? 'tls');
        $mail->SMTPSecure = ($secure === 'ssl') ? PHPMailer::ENCRYPTION_SMTPS : PHPMailer::ENCRYPTION_STARTTLS;

        $from = $email_username ?? $smtpUser ?? 'no-reply@example.com';
        $mail->setFrom($from, 'Armstrong Scheduler');

        foreach ($toEmails as $email) {
            $mail->addAddress($email);
        }
        foreach ($ccEmails as $cc) {
            $mail->addCC($cc);
        }

        $mail->isHTML(true);
        $mail->Subject = $subject;
        $mail->Body    = $body;
        $mail->send();

        if ($logger) {
            $logger('send_email to=' . implode(',', $toEmails) . '; subject=' . $subject . '; cc=' . implode(',', $ccEmails) . '; result=success');
        }
        return true;
    } catch (Exception $e) {
        if ($logger) {
            $logger('send_email error=' . $e->getMessage());
        }
        return false;
    }
}